#!/bin/bash -ex
# enter the directory where the build script is located
cd "${0%/*}"

# some useful variables
SRC_DIR="$(pwd)/../../aws-cli/"
CURRENT_DISTRO=$(basename $(pwd))
BUILD_IMAGE="aws-cli-${CURRENT_DISTRO}-build"
TEST_IMAGE="aws-cli-${CURRENT_DISTRO}-test"
# defaults if not running in CI environment
BUILD_NUMBER=${BUILD_NUMBER:-0}
GIT_COMMIT=${GIT_COMMIT:-gitcommitstub}

docker build --pull -t ${BUILD_IMAGE} build-image

rm -rf out

export VERSION=$(cd ${SRC_DIR} ; { python setup.py --version | tr -d '\n' ; })
[ -n "${VERSION}" ]
docker run --env "BUILD_NUMBER=${BUILD_NUMBER}" --env "GIT_COMMIT=${GIT_COMMIT}" --env "VERSION=${VERSION}" --env-file ../env.list --rm -v $(pwd)/build-inside:/build-inside:ro -v ${SRC_DIR}:/source:ro -v $(pwd)/out:/out -w /build-inside ${BUILD_IMAGE} /build-inside/build-package

docker build --pull -t ${TEST_IMAGE} test-image

rm -rf test-logs
docker run -it --env-file ../env.list --rm -v $(pwd)/test-inside:/test-inside:ro -v $(pwd)/out:/out:ro -v $(pwd)/test-logs:/test-logs -w /test-inside ${TEST_IMAGE} /test-inside/test || { echo "ERROR: the test phase failed." ; exit 1 ; }
echo "Test phase succeeded."

